{"name": "test_question_and_answer[4-\\u041f\\u043e\\u043a\\u0430 \\u0447\\u0442\\u043e \\u043d\\u0435\\u0442! \\u041d\\u043e \\u0435\\u0441\\u043b\\u0438 \\u0447\\u0442\\u043e-\\u0442\\u043e \\u0441\\u0440\\u043e\\u0447\\u043d\\u043e\\u0435 \\u2014 \\u0432\\u0441\\u0435\\u0433\\u0434\\u0430 \\u043c\\u043e\\u0436\\u043d\\u043e \\u043f\\u043e\\u0437\\u0432\\u043e\\u043d\\u0438\\u0442\\u044c \\u0432 \\u043f\\u043e\\u0434\\u0434\\u0435\\u0440\\u0436\\u043a\\u0443 \\u043f\\u043e \\u043a\\u0440\\u0430\\u0441\\u0438\\u0432\\u043e\\u043c\\u0443 \\u043d\\u043e\\u043c\\u0435\\u0440\\u0443 1010.]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: Element <div id=\"accordion__heading-4\" class=\"accordion__button\"> is not clickable at point (966,529) because another element <img src=\"/assets/scooter.png\"> obscures it\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nElementClickInterceptedError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:337:5\nwebdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:177:11\ninteraction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:136:11\nclickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:205:29\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:85:31", "trace": "self = <tests.test_question_page.TestQuestionPage object at 0x718033d65ff0>, driver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"94060f93-e8b6-4a37-a431-cbcb61b62921\")>, num = 4\nresult = 'Пока что нет! Но если что-то срочное — всегда можно позвонить в поддержку по красивому номеру 1010.'\n\n    @allure.description('Тест проверяет, что значение ответа на вопрос соответствует ожидаемому значению')\n    @pytest.mark.parametrize(\n        'num, result',\n        [\n            (0, answer_1),\n            (1, answer_2),\n            (2, answer_3),\n            (3, answer_4),\n            (4, answer_5),\n            (5, answer_6),\n            (6, answer_7),\n            (7, answer_8),\n        ]\n    )\n    def test_question_and_answer(self, driver, num, result):\n        driver.get('https://qa-scooter.praktikum-services.ru/')\n        question_page = QuestionsPage(driver)\n>       actual_result = question_page.get_answer_text(num)\n\ntests/test_question_page.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/questions_page.py:23: in get_answer_text\n    self.driver.find_element(*locator_q_formatted).click()\nvenv/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\nvenv/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\nvenv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x718033b3fd60>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"Element <div id=\\\\\"accordion__headi...sys.mjs:205:29\\\\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:85:31\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: Element <div id=\"accordion__heading-4\" class=\"accordion__button\"> is not clickable at point (966,529) because another element <img src=\"/assets/scooter.png\"> obscures it\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nE       ElementClickInterceptedError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:337:5\nE       webdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:177:11\nE       interaction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:136:11\nE       clickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:205:29\nE       receiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:85:31\n\nvenv/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException"}, "description": "Тест проверяет, что значение ответа на вопрос соответствует ожидаемому значению", "steps": [{"name": "Открываем браузер Firefox", "status": "passed", "parameters": [{"name": "driver", "value": "<selenium.webdriver.firefox.webdriver.WebDriver (session=\"94060f93-e8b6-4a37-a431-cbcb61b62921\")>"}], "start": 1718188966828, "stop": 1718188966828}, {"name": "Находим и кликаем по вопросу. Метод возвращает текстовое значения ответа на вопрос.", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: Element <div id=\"accordion__heading-4\" class=\"accordion__button\"> is not clickable at point (966,529) because another element <img src=\"/assets/scooter.png\"> obscures it\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nElementClickInterceptedError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:337:5\nwebdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:177:11\ninteraction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:136:11\nclickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:205:29\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:85:31\n\n", "trace": "  File \"/home/irina/Документы/qa_python_sprint_6/venv/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/home/irina/Документы/qa_python_sprint_6/pages/questions_page.py\", line 23, in get_answer_text\n    self.driver.find_element(*locator_q_formatted).click()\n  File \"/home/irina/Документы/qa_python_sprint_6/venv/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/home/irina/Документы/qa_python_sprint_6/venv/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n  File \"/home/irina/Документы/qa_python_sprint_6/venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/home/irina/Документы/qa_python_sprint_6/venv/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "steps": [{"name": "Метод форматирует локатор, предоставляя возможность добавлять в конец локатора необходимое число", "status": "passed", "parameters": [{"name": "locator_1", "value": "['xpath', \".//div[@id='accordion__heading-{}']\"]"}, {"name": "num", "value": "4"}], "start": 1718188966828, "stop": 1718188966828}, {"name": "Метод форматирует локатор, предоставляя возможность добавлять в конец локатора необходимое число", "status": "passed", "parameters": [{"name": "locator_1", "value": "['xpath', \".//div[@id='accordion__panel-{}']\"]"}, {"name": "num", "value": "4"}], "start": 1718188966828, "stop": 1718188966828}], "parameters": [{"name": "num", "value": "4"}], "start": 1718188966828, "stop": 1718188966850}], "parameters": [{"name": "num", "value": "4"}, {"name": "result", "value": "'Пока что нет! Но если что-то срочное — всегда можно позвонить в поддержку по красивому номеру 1010.'"}], "start": 1718188955873, "stop": 1718188966851, "uuid": "34c253ed-0c83-461b-83f5-f0647a8e1081", "historyId": "a1cc6a605e2b1003a79190060cff4b46", "testCaseId": "acaf9c214d1bd991282b6d7845862805", "fullName": "tests.test_question_page.TestQuestionPage#test_question_and_answer", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_question_page"}, {"name": "subSuite", "value": "TestQuestionPage"}, {"name": "host", "value": "irina-IdeaPad-5-Pro-14ACN6"}, {"name": "thread", "value": "81801-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_question_page"}]}